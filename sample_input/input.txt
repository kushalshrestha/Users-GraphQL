{
    user(id : "40") {
      id,firstName, age,company {
        id, name, description
      }
    }
}

---------
query findCompanyNameById{
  company(id : "1") {
    name
  }
}
---------- 
# we can nest many times
{
  company(id : "1") {
    id,
    name,
    description,
    users{
      id,
      firstName,
      age,
      company{name}
    }
  }
}
------
## Query Fragments
- we can name a query
- we can request for multiple resource by adding a name in front of the request

query findCompanyNameById{
  company1: company(id : "1") {
    name, id, description
  },
  company2: company(id : "2") {
    name, id, description
  }
}

-- Now you have noticed same fields repeated twice like (name, id , description). So we can use Query Fragments
query findCompanyNameById{
  company1: company(id : "1") {
    ...companyDetailsField
  },
  company2: company(id : "2") {
    ...companyDetailsField
  }
}

fragment companyDetailsField on Company {
  name, id, description
}

----------
# MUTATION
const mutation = new GraphQLObjectType({
  name: "Mutation",
  fields: {
    addUser: {
      type: UserType /* type of data we need to return*/,
      args: {
        firstName: {
          type: new GraphQLNonNull(GraphQLString),
        } /* must provide firstName */,
        age: { type: new GraphQLNonNull(GraphQLInt) },
        companyId: { type: GraphQLString },
      },
      resolve(parentValue, { firstName, age }) {
        return axios
          .post(API_BASE_URL + `/users`, { firstName, age })
          .then((res) => res.data);
      },
    },
  },
});

/* Need to add mutation for export */
module.exports = new GraphQLSchema({
  query: RootQuery,
  mutation: mutation
});

`**INPUT:**`

```graphql
mutation {
  addUser(firstName: "Ronaldo", age: 28){
    id, firstName, age
  }
}
```

--------
